/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import NapakalakiGame.CombatResult;
import NapakalakiGame.Napakalaki;

/**
 *
 * @author sequi96
 */
public class NapakalakiView extends javax.swing.JFrame {
    
    
    private Napakalaki napakalakiModel;
    
    
    /**
     * Creates new form NapakalakiView
     */
    public NapakalakiView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        meetTheMonster = new javax.swing.JButton();
        combat = new javax.swing.JButton();
        nextTurn = new javax.swing.JButton();
        monsterView = new GUI.MonsterView();
        exit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        result = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        playerView = new GUI.PlayerView();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 153));

        meetTheMonster.setBackground(new java.awt.Color(204, 204, 204));
        meetTheMonster.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        meetTheMonster.setForeground(new java.awt.Color(255, 0, 0));
        meetTheMonster.setText("Meet the Monster");
        meetTheMonster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meetTheMonsterActionPerformed(evt);
            }
        });

        combat.setBackground(new java.awt.Color(204, 204, 204));
        combat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        combat.setForeground(new java.awt.Color(51, 153, 255));
        combat.setText("Combat");
        combat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combatActionPerformed(evt);
            }
        });

        nextTurn.setBackground(new java.awt.Color(204, 204, 204));
        nextTurn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nextTurn.setForeground(new java.awt.Color(0, 153, 51));
        nextTurn.setText("Next Turn");
        nextTurn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextTurnActionPerformed(evt);
            }
        });

        exit.setBackground(new java.awt.Color(204, 204, 204));
        exit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        result.setEditable(false);
        result.setColumns(20);
        result.setRows(5);
        jScrollPane1.setViewportView(result);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("RESULTADO DEL COMBATE:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(meetTheMonster)
                        .addGap(126, 126, 126)
                        .addComponent(combat, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(121, 121, 121)
                        .addComponent(nextTurn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(playerView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(monsterView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(monsterView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(playerView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(combat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(meetTheMonster, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(nextTurn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void meetTheMonsterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meetTheMonsterActionPerformed
        this.monsterView.setVisible(true);//hacemos visible al monstruo
        this.combat.setEnabled(true);//activamos el boton de combatir
        this.meetTheMonster.setEnabled(false);
        this.playerView.setMakeVisible(false);
        
        
        repaint();
    }//GEN-LAST:event_meetTheMonsterActionPerformed

    private void combatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combatActionPerformed
        
        CombatResult res = this.napakalakiModel.developCombat();
        String cad="";
        if(res==CombatResult.LOSE || res == CombatResult.LOSEANDCONVERT)
        {
            cad = "HAS PERDIDO EL COMBATE\n";
            cad = cad + "\nTE TOCA CUMPLIR EL MAL ROLLO\n";
        }
        else if(res == CombatResult.WIN)
        {
            cad = "¡¡¡HAS GANADO EL COMBATE!!!";
        }
        else if(res == CombatResult.WINGAME)
        {
             cad = "¡¡¡HAS GANADO LA PARTIDA!!!";            
        }       
        
        this.result.setText(cad);
        
        if(res== CombatResult.WINGAME){
            
            this.playerView.setAll(false);// desactivamos todos los botones de player
            this.nextTurn.setEnabled(false);//desactivamos el boton de siguiente turno
            this.combat.setEnabled(false);
        }
        else
        {
            this.nextTurn.setEnabled(true);//activamos el boton de siguiente turno
            this.playerView.setPlayer(napakalakiModel.getCurrentPlayer());
            this.playerView.setAll(true);// activamos todos los botones de player
            this.combat.setEnabled(false);// desactivamos el boton de combatir
            this.playerView.setPendingBadVisible(true);
        }
        
        
        repaint();
    }//GEN-LAST:event_combatActionPerformed

    private void nextTurnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextTurnActionPerformed
        boolean can=this.napakalakiModel.nextTurn();
        if(can)
            setNapakalaki(napakalakiModel);
        
        
        repaint();
     
    }//GEN-LAST:event_nextTurnActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    
    public void setNapakalaki(Napakalaki m)
    {
        napakalakiModel = m;
        this.result.setText("");
        this.playerView.setPlayer(napakalakiModel.getCurrentPlayer());
        this.monsterView.setMonster(napakalakiModel.getCurrentMonster());
        this.monsterView.setVisible(false);
        this.playerView.setNapakalaki(napakalakiModel);
        
        this.combat.setEnabled(false);
        this.nextTurn.setEnabled(false);
        this.meetTheMonster.setEnabled(true);
        
        this.playerView.setDiscardAllTreasures(false);
        this.playerView.setDiscardTreasures(false);
        this.playerView.setStealTreasure(false);
        this.playerView.setPendingBadVisible(false);
        
        this.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton combat;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton meetTheMonster;
    private GUI.MonsterView monsterView;
    private javax.swing.JButton nextTurn;
    private GUI.PlayerView playerView;
    private javax.swing.JTextArea result;
    // End of variables declaration//GEN-END:variables
}
